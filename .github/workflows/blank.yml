name: Build All Binaries

on:
  workflow_dispatch:
jobs:

  prepare-project:
    runs-on: ubuntu-latest

  build-linux:
    runs-on: ubuntu-latest
    needs: [prepare-project]
    steps:
     
      - name: Checkout
        uses: actions/checkout@v3

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          
      - name: Build Deb
        run: |
          cd eltonkola
          ./gradlew composeApp:packageDeb
        
      - name: Upload DEB
        uses: actions/upload-artifact@v3
        with:
          name: app.deb
          path: eltonkola/composeApp/build/compose/binaries/main/deb/Telekomanda-1.0.0-1_amd64.deb

  build-windows:
    runs-on: windows-latest
    needs: [prepare-project]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
      
      - name: Build Exe
        run: |
          cd eltonkola
          ./gradlew composeApp:packageMsi
                  
      - name: Upload Msi
        uses: actions/upload-artifact@v3
        with:
          name: app.msi
          path: eltonkola\composeApp\build\compose\binaries\main\msi\Telekomanda-1.0.0.msi

  build-macos:
    runs-on: macos-latest
    needs: [prepare-project]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          
      - name: Build Dmg
        run: |
          cd eltonkola
          ./gradlew composeApp:packageDmg
                  
      - name: Upload Dmg
        uses: actions/upload-artifact@v3
        with:
          name: app.dmg
          path: eltonkola/composeApp/build/compose/binaries/main/dmg/Telekomanda-1.0.0.dmg

  publish-release:
    runs-on: ubuntu-latest
    needs: [build-macos, build-windows,build-linux]
    steps:
            

      - uses: actions/download-artifact@v3
        with:
          name: app.deb
          path: downloads/
          
      - uses: actions/download-artifact@v3
        with:
          name: app.msi
          path: downloads/
          
      - uses: actions/download-artifact@v3
        with:
          name: app.dmg
          path: downloads/
              
      
      - name: Show files
        run: |
          cd downloads/
          ls
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: v1 #${{ github.ref }}
          release_name: Release v1 #${{ github.ref }} 
        
      - name: Upload Release Deb
        id: upload_release_deb
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: downloads/Telekomanda.0.0-1_amd64.deb
          asset_name: ek-amd64.deb
          asset_content_type: application/zip
          
      - name: Upload Release Msi
        id: upload_release_msi
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: downloads/Telekomanda-1.0.0.msi
          asset_name: ek.msi
          asset_content_type: application/zip
          

      - name: Upload Release Dmg
        id: upload_release_dmg
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: downloads/Telekomanda-1.0.0.dmg
          asset_name: ek.dmg
          asset_content_type: application/zip
          
  
